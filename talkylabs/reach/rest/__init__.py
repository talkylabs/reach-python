r"""
  This code was generated by
  ___ ___   _   ___ _  _    _____ _   _    _  ___   ___      _   ___ ___      ___   _   ___     ___ ___ _  _ ___ ___    _ _____ ___  ___ 
 | _ \ __| /_\ / __| || |__|_   _/_\ | |  | |/ | \ / / |    /_\ | _ ) __|___ / _ \ /_\ |_ _|__ / __| __| \| | __| _ \  /_\_   _/ _ \| _ \
 |   / _| / _ \ (__| __ |___|| |/ _ \| |__| ' < \ V /| |__ / _ \| _ \__ \___| (_) / _ \ | |___| (_ | _|| .` | _||   / / _ \| || (_) |   /
 |_|_\___/_/ \_\___|_||_|    |_/_/ \_\____|_|\_\ |_| |____/_/ \_\___/___/    \___/_/ \_\___|   \___|___|_|\_|___|_|_\/_/ \_\_| \___/|_|_\
 
  NOTE: This class is auto generated by OpenAPI Generator.
  https://openapi-generator.tech
  Do not edit the class manually.
"""
from typing import Optional

from talkylabs.reach.base.client_base import ClientBase

class ReachClient(ClientBase):
    """A client for accessing the Reach API."""

    def __init__(
        self,
        username=None,
        password=None,
        http_client=None,
        environment=None,
        user_agent_extensions=None,
    ):
        """
        Initializes the Reach Client

        :param str username: Username to authenticate with, i.e., the api_user
        :param str password: Password to authenticate with, i.e., the api_key
        :param HttpClient http_client: HttpClient, defaults to ReachHttpClient
        :param dict environment: Environment to look for auth details, defaults to os.environ
        :param list[str] user_agent_extensions: Additions to the user agent string

        :returns: Reach Client
        :rtype: talkylabs.reach.rest.ReachClient
        """
        super().__init__(
            username,
            password,
            http_client,
            environment,
            user_agent_extensions,
        )

        # Domains
        self._api: Optional["Api"] = None

    @property
    def api(self) -> "Api":
        """
        Access the Api Reach Domain

        :returns: Api Reach Domain
        """
        if self._api is None:
            from talkylabs.reach.rest.api import Api

            self._api = Api(self)
        return self._api

    @property
    def messaging(self) -> "Messaging":
        return self.api.messaging

    @property
    def authentix(self) -> "Authentix":
        return self.api.authentix
